name: Backend Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - 'MTB-*'

jobs:

  # -------------------------------
  # 1. Unit tests
  # ----------------------------
  unit-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies (no-root)
        run: poetry install --no-root  # только зависимости, без установки пакета

      - name: Run unit tests
        run: poetry run pytest tests/units -v  # запускаем только юнит-тесты
  # -------------------------------
  # 2. Integration tests
  # -------------------------------
  integration-tests:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U test"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential libpq-dev

      - name: Install Poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Wait for Postgres
        run: |
          until pg_isready -h localhost -p 5432; do
            echo "Waiting for postgres..."
            sleep 2
          done

      - name: Run migrations
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
          APP_ENV: testing
        run: poetry run alembic upgrade head

      - name: Run all tests
        env:
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: test
          APP_ENV: testing
        run: poetry run pytest tests/ -v
